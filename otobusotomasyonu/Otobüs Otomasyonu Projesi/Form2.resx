<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridView1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhb8kiiIRC4OIWGyhVgZERSwliiIoSIwQj8LdjYmB7CbsRmwsBVvBwqPxKmystbWwFQTBA8ResFK0
        EVn/2QgJQgQHhvl4M+8x8waCBznTcmt6wLKLTnwspiVn57S6Z0I000AvLbrpFianRxNUHR+3BNR6E1VZ
        /G80ppZcEwKa8JBZcIrCi8IDq8WC4h3hiLmsp4RPhbsduaDwvdKNEr8ozvgcVJkRJxEfFo4Ia5kKNirY
        XHYs4X7hjpRlS34wWeKU4jXFVm7F/LmnemF4yZ6ZVrrMdsYYZ5IpNAxWyJKjSFRWWxSXuOzHqvjbfP+U
        uAxxZTHFMUIeC933o/7gd7duuq+3lBSOQe2T5711Qt0WfG163ueh530dQegRLuyyP38Ag++ib5a1jn1o
        Woezy7JmbMP5BrQ+FHRH96WQzGA6Da8n8k2z0HwNDfOl3n72Ob6DhHQ1cQW7e9CVkeyFKu+ur+ztzzN+
        f8S+AZqxcremWjKKAAAACXBIWXMAAA7OAAAOzgHOX8X3AAAAB3RJTUUH6QMTCjIvs6WOtQAAAjVJREFU
        aEPFjotuAzEQAvv/P53Wp6ByGHuxnUelqXR4IPvzeDxezt9f+zdE/VdgwxP06BHaO8WGJ+jBI7R3ig1P
        mB2Kt9H7CTbcJTm0et/Fhgp+vDriHc7MY2zI6CioPH0HlafvQD3FhkDHVtAtoN4KusXYsDEa0dwBd4T6
        jpGLXPFhUE6chGQncmxYlED1vkLyW0DfGl1whUXpG1Q3dcEVUmlU/CTJPV0AquInSW6xYYPLs4EZr97Q
        N8aGIB1huDNDeyPSjg1BOtJgdwXdUVLXhiAeIQ+oA9RrqMPEngsb8QB5lcus9BLPh1SclRup50i77IHO
        uf6JpHCBSZyKZIMdx9PxjwBjjtSbkW6wN+Ae6MCMnY5jdwe9J/8fKs7Y7Tl2t7h3+1Bxxm7PsbvFvduH
        ijN2e47dLe7dPlScsdtz7G5x7/ahYsVuT9ndQe/J7aNDy0zqzUg32LMkEg8yiVORbLDjuBwuXIFIDXWY
        1HOkXfZA52gAZiWGvcplVnqJZ0OQDDTYA+oA9RrqMLHnQpCONNhdQXeU1LUh4JFqCGhnhPZGpB0bgnRk
        BPdfsaFvjA0b6cAnSG7xIRVn5U+R3NMFV1iUvkF1UxdcYVH6BtVNXXCFVBoWAych2YkcFzZmZX1T2HWo
        7xi5yBUbAh1ZQbeAeivoFmNDRseYmcdvTOXpO1BPsaGSjr7DmXmMDXdJfjxxdrDhCdWR1fsuNjwBh1Zo
        7xQbnqAHj9DeKTY8RY9W1D/n8fMLuKrdZtpaFMwAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 23</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>